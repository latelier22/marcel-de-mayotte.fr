/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'

import { degToRad, lerp } from "three/src/math/MathUtils";

export function GalerieSimple(props) {
  const { nodes, materials } = useGLTF('/GalerieSimple.glb')
  return (
    <group {...props} dispose={null} rotation-y={degToRad(180)}>
      <mesh castShadow receiveShadow  geometry={nodes.Cube.geometry} material={materials.Material} />
      <group position={[1.837, 4.119, -1.851]} rotation={[1.89, 1.881, -2.045]}>
        <pointLight intensity={500} decay={3} rotation={[-Math.PI / 4, 0, 0]} />
      </group>
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials.Material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={materials.Material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={materials.Material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials['Material.001']}
        scale={[-1,1,1]}
      />
    </group>
  )
}

export default GalerieSimple

useGLTF.preload('/GalerieSimple.glb')